<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marko Ivankovic and Marina Celar Ivankovic - personal website</title>
    <link>https://www.ivankovic.me/</link>
    <description>Recent content on Marko Ivankovic and Marina Celar Ivankovic - personal website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jun 2018 20:27:06 +0100</lastBuildDate>
    
	<atom:link href="https://www.ivankovic.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Privacy Details</title>
      <link>https://www.ivankovic.me/privacy/details/</link>
      <pubDate>Thu, 28 Jun 2018 20:27:06 +0100</pubDate>
      
      <guid>https://www.ivankovic.me/privacy/details/</guid>
      <description>Privacy policy In short, I don&amp;rsquo;t track anything other than the bare minimum technically needed to serve the webpage.
Cookies and local storage This website doesn&amp;rsquo;t use cookies or web browser provided local storage.
Logs This website doesn&amp;rsquo;t keep any logs other than the bare minimum required to serve the webpage and prevent abuse. I do not keep access logs other than keeping the request IP address in memory for a few minutes.</description>
    </item>
    
    <item>
      <title>The layout and security of my home network</title>
      <link>https://www.ivankovic.me/blog/2016/09/04/the-layout-and-security-of-my-home-network/</link>
      <pubDate>Sun, 04 Sep 2016 18:16:49 +0200</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2016/09/04/the-layout-and-security-of-my-home-network/</guid>
      <description>The layout and security of my home network I wanted to write this post for quite some time now. Mostly to have an opportunity to critically examine my own setup. If someone else finds this useful, that&amp;rsquo;s just extra.
In this post I will describe the layout and security layers of my entire home network. I personally strongly believe that security can only come from usability, and I will try to point out in this post paths not taken.</description>
    </item>
    
    <item>
      <title>Buildroot directory structure for multiple R-Pi devices</title>
      <link>https://www.ivankovic.me/blog/2016/02/22/buildroot-directory-structure-for-multiple-r-pi-devices/</link>
      <pubDate>Mon, 22 Feb 2016 01:14:28 +0100</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2016/02/22/buildroot-directory-structure-for-multiple-r-pi-devices/</guid>
      <description>Buildroot directory structure for multiple R-Pi devices I have been experimenting with embedded Linux builds on my R-Pi devices for quite some time now. There are at least 3 ways you can do that:
 Linux From Scratch - Very good for educational value, almost meaningless for multiple devices since it is completely manual and hard to reproduce Yocto Project - Linux foundation project aimed at enabling embedded Linux developement.</description>
    </item>
    
    <item>
      <title>Self-hosting a static personal homepage - Security</title>
      <link>https://www.ivankovic.me/blog/2015/12/23/self-hosting-a-static-personal-homepage-security/</link>
      <pubDate>Wed, 23 Dec 2015 23:29:21 +0100</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2015/12/23/self-hosting-a-static-personal-homepage-security/</guid>
      <description>Self-hosting a static personal homepage - Security I recently switched my website from GitHub pages to an unmanaged VPS. I wanted to enable SSL for my domain and I wanted to experiment with Let&amp;rsquo;s Encrypt.
I also like to do the occasional exercise in over engineering. This blog post documents the security setup of my homepage.
Why VPS I chose an unmanaged VPS because they are cheap and provide good operational isolation.</description>
    </item>
    
    <item>
      <title>Installing SSL client certificate on Android</title>
      <link>https://www.ivankovic.me/blog/2015/08/20/installing-ssl-client-certificate-on-android/</link>
      <pubDate>Thu, 20 Aug 2015 01:08:07 +0200</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2015/08/20/installing-ssl-client-certificate-on-android/</guid>
      <description>Installing SSL client certificate on Android This is just a quick tip for anyone who is trying to install client SSL certificates on Android devices.
First, make sure you follow this Google support page. Pay particular attention to the file extension. If you have a PKCS 12 formatted file, it must end in .p12.
Next, make sure you download the certificate on the internal memory. Google Drive, Dropbox, your own personal cloud or any other network storage will not work.</description>
    </item>
    
    <item>
      <title>go-config - Go library for text file based configuration</title>
      <link>https://www.ivankovic.me/blog/2015/03/06/go-config-go-library-for-text-file-based-configuration/</link>
      <pubDate>Fri, 06 Mar 2015 22:55:30 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2015/03/06/go-config-go-library-for-text-file-based-configuration/</guid>
      <description>Go-config - Go library for text file based configuration I just open-sourced a Go library for text file based configuration: go-config.
Format The format the library supports is a limited subset of the .INI format:
key=value # Comment [section] key=value key=returned_value  It supports sections, key value pairs, global section and # line comments. It doesn&amp;rsquo;t support any escaping, in-line comments or semicolon comments. Duplicate names are ok. The last value will be used.</description>
    </item>
    
    <item>
      <title>A nice directory structure for Go code</title>
      <link>https://www.ivankovic.me/blog/2015/02/18/a-nice-directory-structure-for-go-code/</link>
      <pubDate>Wed, 18 Feb 2015 20:59:50 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2015/02/18/a-nice-directory-structure-for-go-code/</guid>
      <description>A nice directory structure for Go code I recently discovered the wonders of Go. I have been using it at work, on the Raspberry Pi and to solve competitive programming problems on Project Euler. I even tried out my hand at open sourcing some Go code on GitHub. And I found it really really fun to use in all these situations.
One of the things I like the most about Go is how easy it is to reuse code across projects.</description>
    </item>
    
    <item>
      <title>SwarmCast: Autostart Tmux with SSH</title>
      <link>https://www.ivankovic.me/blog/2014/10/14/swarmcast-autostart-tmux-with-ssh/</link>
      <pubDate>Mon, 13 Oct 2014 22:35:37 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/10/14/swarmcast-autostart-tmux-with-ssh/</guid>
      <description>SwarmCast: Autostart Tmux with SSH Maintenance tasks on the RPi Swarm nodes can be a bit of a chore. Of course the idea is to automate as much as possible, but sometimes you just need to do the same exact sequence of commands on all nodes at once.
Luckily, Tmux combined with SSH (using SSH keys and SSH config) is just the thing we need.
Starting Tmux from a Bash script Tmux has a really powerfull set of commands.</description>
    </item>
    
    <item>
      <title>Things to remove from a fresh Ubuntu 14.04 install</title>
      <link>https://www.ivankovic.me/blog/2014/10/02/things-to-remove-from-a-fresh-ubuntu-14-04-install/</link>
      <pubDate>Thu, 02 Oct 2014 09:00:41 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/10/02/things-to-remove-from-a-fresh-ubuntu-14-04-install/</guid>
      <description>Things to remove from a fresh Ubuntu 14.04 install This is a list of things I removed from my fresh Ubuntu 14.04 install.
account-plugin-facebook account-plugin-flickr account-plugin-google account-plugin-twitter account-plugin-windows-live adium-theme friends unity-lens-video unity-lens-music unity-scope-video-remote unity-scope-zotero unity-scope-openclipart unity-scope-colourlovers unity-scope-guayadeque unity-scope-clementine unity-scope-audacious unity-scope-gmusicbrowser unity-scope-musique unity-scope-gourmet unity-scope-virtualbox unity-scope-video-remote wodim remmina remmina-common rhythmbox rhythmbox-data brasero gnome-sudoku gnome-mahjongg
Related For a list of things you can remove from a headless Raspberry Pi Raspbian install click here</description>
    </item>
    
    <item>
      <title>Guest post on Google testing blog</title>
      <link>https://www.ivankovic.me/blog/2014/07/26/guest-post-on-google-testing-blog/</link>
      <pubDate>Sat, 26 Jul 2014 10:22:08 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/07/26/guest-post-on-google-testing-blog/</guid>
      <description>Guest post on Google testing blog I had a guest post on the Google testing blog: Measuring coverage at Google</description>
    </item>
    
    <item>
      <title>Migrating to Hugo</title>
      <link>https://www.ivankovic.me/blog/2014/07/26/migrating-to-hugo/</link>
      <pubDate>Fri, 25 Jul 2014 22:13:55 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/07/26/migrating-to-hugo/</guid>
      <description>Migrating to Hugo I was recently looking around for a new static site generator. Nanoc is good, but I have never liked the way you specify URL paths in it. It&amp;rsquo;s run by a relly stand-up guy though, and the Nanoc website actually links to a list of simillar project.
Going through the list I noticed something interesting: Hugo. It&amp;rsquo;s one of the most starred generators, and the only top 15 generator built in a compiled language: Go.</description>
    </item>
    
    <item>
      <title>Marina Celar Ivankovic &gt; Contact</title>
      <link>https://www.ivankovic.me/contact/marina/</link>
      <pubDate>Thu, 10 Jul 2014 20:30:02 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/contact/marina/</guid>
      <description>Contact information The following contact information can be used to reach Marina Čelar Ivanković:  Main contact: marina [at] ivankovic (dot) me Google Plus profile LinkedIn profile Instagram profile  This is the canonical list of my profiles. Any other profile is either another person with the same name or a fake.
 </description>
    </item>
    
    <item>
      <title>Marina Celar Ivankovic &gt; Resume</title>
      <link>https://www.ivankovic.me/about/marina/</link>
      <pubDate>Thu, 10 Jul 2014 20:27:05 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/about/marina/</guid>
      <description>dr. vet. med. Marina Čelar Ivanković - Resume Last updated: Feb 14th, 2015.
Work  Volounteer work at the VEF clinics for internal medicine (2012. - 2014.) Volounteer work at the Khulula Wildlife Center, South Africa (2013.) Volounteer work at the county veterinary station in Varaždin (2005.)  Teaching  TA on the Internal Medicine classes (2013. - 2014.) TA on the Comparative Anatomy 101, 102, 103 classes (2009. - 2010.</description>
    </item>
    
    <item>
      <title>Marko Ivankovic &gt; Contact</title>
      <link>https://www.ivankovic.me/contact/marko/</link>
      <pubDate>Thu, 10 Jul 2014 20:24:51 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/contact/marko/</guid>
      <description>Contact information The following contact information can be used to reach Marko Ivanković:  Main contact: marko [at] ivankovic (dot) me Keybase.io profile GitHub profile Twitter profile Google Plus profile LinkedIn profile Instagram profile  This is the canonical list of my profiles. Any other profile is either another person with the same name or a fake.
My public key is: 5307 38FD 7A87 E6E8 9101 BBBE 72FE C3F6 4C87 DF37</description>
    </item>
    
    <item>
      <title>Marko Ivankovic &gt; Resume</title>
      <link>https://www.ivankovic.me/about/marko/</link>
      <pubDate>Wed, 09 Jul 2014 20:40:05 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/about/marko/</guid>
      <description>Marko Ivanković - Resume  Last updated: July 1st, 2018.
Work   Google  - Staff Software Engineer, Tools and Infrastructure (2016 - present)  Google - Senior Software Engineer, Tools and Infrastructure (2014 - 2016) Google - Software Engineer, Tools and Infrastructure (2011 - 2014) Google - Software Engineer, Tools and Infrastructure (2010)  Publications and presentations  Paper: An Industrial Application of Mutation Testing: Lessons, Challenges, and Research Directions.</description>
    </item>
    
    <item>
      <title>Remote administration node - reverse SSH setup</title>
      <link>https://www.ivankovic.me/blog/2014/06/15/remote-administration-node-reverse-ssh-setup/</link>
      <pubDate>Sun, 15 Jun 2014 10:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/06/15/remote-administration-node-reverse-ssh-setup/</guid>
      <description>Remote administration node - reverse SSH setup Sometimes you just need to remotely administer a network 1000 kilometers away. Thinking ahead can save you a lot of headache in this situation.
A R-PI node connected to the remote network can open a reverse SSH tunnel back to you.
Reverse SSH tunnel setup Because one of the devices is in a physically remote location you should not reuse any cryptographic materials.</description>
    </item>
    
    <item>
      <title>Using SSH config file to simplify swarm management</title>
      <link>https://www.ivankovic.me/blog/2014/05/28/using-ssh-config-file-to-simplify-swarm-management/</link>
      <pubDate>Wed, 28 May 2014 10:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/05/28/using-ssh-config-file-to-simplify-swarm-management/</guid>
      <description>Using SSH config file to simplify Swarm management While the whole point of having a swarm of devices is to automate things as much as possible, sometimes you just have to SSH into some, or all, of them. Increasing security by using non-standard ports will cause some usability problems though. It’s really easy to work around it using a bit of config.
.ssh/config .ssh/config is a fantastic little file. The most important declaration you need to know is Host because it restricts the all other declarations to the host names that match the specified pattern.</description>
    </item>
    
    <item>
      <title>Saving 20ma on each RPi node</title>
      <link>https://www.ivankovic.me/blog/2014/05/01/saving-20ma-on-each-rpi-node/</link>
      <pubDate>Thu, 01 May 2014 12:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/05/01/saving-20ma-on-each-rpi-node/</guid>
      <description>Saving 20mA on each R-PI node Most nodes in the R-PI swarm don’t have a display device connected to them. So why keep the display device in standby?
According to Dave Akerman’s blog post the current usage from these is 20mA.
All you need to do to disable them is run:
sudo /opt/vc/bin/tvservice --off  Don’t forget to add this to your /etc/rc.local file as well.</description>
    </item>
    
    <item>
      <title>Raspberry Pi swarm - Automatically installing security updates</title>
      <link>https://www.ivankovic.me/blog/2014/04/30/raspberry-pi-swarm-automatically-installing-security-updates/</link>
      <pubDate>Wed, 30 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/04/30/raspberry-pi-swarm-automatically-installing-security-updates/</guid>
      <description>Raspberry PI swarm - Automatically installing security updates When the security 0-day hits the fan, you want to update as fast as super humanly possible. Responsible disclosure and embargos on major security updates are fantastic, but if the last mile is not fast enough, you will be targeted by opportunistic internet wide scans.
Luckily, setting up automatic security updates on Debian is very easy.
Required packages All you need is Anacron and unnatended-upgrades.</description>
    </item>
    
    <item>
      <title>OpenSCAD patterns and tips</title>
      <link>https://www.ivankovic.me/blog/2014/04/25/openscad-patterns-and-tips/</link>
      <pubDate>Fri, 25 Apr 2014 22:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/04/25/openscad-patterns-and-tips/</guid>
      <description>OpenSCAD patterns and tips I recently started playing around with laser cutters and 3D printers. So far, I have learned two major lessons: my material science knowledge is lacking and CAD tools are not as advanced as Iron Man would have you believe.
After a bit of searching and trying out, I ended up using OpenSCAD because it fits my programming soul. As with any other programming language, you quickly learn that there are patterns and anti-patterns, so here’s my list of OpenSCAD patterns and tips.</description>
    </item>
    
    <item>
      <title>Encrypting access to all local web consoles using Nginx as reverse SSL proxy</title>
      <link>https://www.ivankovic.me/blog/2014/04/12/encrypting-access-to-all-local-web-consoles-using-nginx-as-reverse-ssl-proxy/</link>
      <pubDate>Sat, 12 Apr 2014 20:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/04/12/encrypting-access-to-all-local-web-consoles-using-nginx-as-reverse-ssl-proxy/</guid>
      <description>Encrypting access to all local web consoles (using Nginx as reverse SSL proxy) A lot of software I run on Raspberry PI nodes comes with built-in web interfaces. Making sure all of these are encrypted, only allow authenticated users and don’t have vulnerabilities is tiresome and prone to errors. Some interfaces will allow you to hook up to existing Nginx or Apache servers, but some stubbornly insist on using their own built in web server.</description>
    </item>
    
    <item>
      <title>Laser cut Raspberry Pi case with camera mount - version 1</title>
      <link>https://www.ivankovic.me/blog/2014/02/15/laser-cut-raspberry-pi-case-with-camera-mount-version-1/</link>
      <pubDate>Sat, 15 Feb 2014 09:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/02/15/laser-cut-raspberry-pi-case-with-camera-mount-version-1/</guid>
      <description>Laser cut Raspberry PI case with camera mount - version 1 I feel very happy that I live in a time when hobby laser cutters are a thing. Yay Science!
My first project My first project: A Raspberry PI case with a camera mount. I have a few of these around my apartment acting as a security system. Up until now, they looked more or less like this:
This has a nice punk feel to it, but it’s somewhat vulnerable to things falling on it, or it falling off things.</description>
    </item>
    
    <item>
      <title>Detecting the presence of a specific smartphone device on the network</title>
      <link>https://www.ivankovic.me/blog/2014/01/23/detecting-the-presence-of-a-specific-smartphone-device-on-the-network/</link>
      <pubDate>Thu, 23 Jan 2014 09:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/01/23/detecting-the-presence-of-a-specific-smartphone-device-on-the-network/</guid>
      <description>Detecting the presence of a specific smartphone device on the network Some parts of my R-PI swarm are more useful when I am at home, and some only make sense if my apartment is empty. It would be relatively easy to do some form of active notification that would require me to press a button, scan an NFC tag or some other action when I enter and leave my apartment, but it would be really cool if each drone in my R-PI swarm could figure out on it’s own if I am at home or not.</description>
    </item>
    
    <item>
      <title>Teaching my Raspberry Pi nodes how to contact me</title>
      <link>https://www.ivankovic.me/blog/2014/01/19/teaching-my-raspberry-pi-nodes-how-to-contact-me/</link>
      <pubDate>Sun, 19 Jan 2014 09:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2014/01/19/teaching-my-raspberry-pi-nodes-how-to-contact-me/</guid>
      <description>Teaching my Raspberry PI nodes how to contact me Like every good little robot, my R-PI nodes need a way to contact me if anything goes wrong. The best way I found was by using good old email. It’s incredibly easy to set up and quite secure (believe it or not).
Since my nodes only ever need to send email to contact me, never to read it, instead of using the more complicated Sendmail or mutt, I use sSMTP.</description>
    </item>
    
    <item>
      <title>Why constructing human readable SHA256 (or other hashes) is hard - part 1</title>
      <link>https://www.ivankovic.me/blog/2013/12/26/why-constructing-human-readable-sha256-or-other-hashes-is-hard-part-1/</link>
      <pubDate>Thu, 26 Dec 2013 08:15:55 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/12/26/why-constructing-human-readable-sha256-or-other-hashes-is-hard-part-1/</guid>
      <description>Why constructing human readable SHA256 (or other) hashes is hard - Part 1 I have been playing around with the idea of making a human readable version of SHA256 hash. It seems like a nice improvement, in theory.
Instead of the hexadecimal representation of the standard ”The quick brown fox jumps over the lazy dog.” example:
ef537f25c895bfa782526529a9b63d97aa631564d5d789c2b765448c8635fb6c  I was trying to encode it as a sequence of words, for example:</description>
    </item>
    
    <item>
      <title>How to pick the best non standard port for SSH or other services</title>
      <link>https://www.ivankovic.me/blog/2013/11/26/how-to-pick-the-best-non-standard-port-for-ssh-or-other-services/</link>
      <pubDate>Tue, 26 Nov 2013 22:59:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/11/26/how-to-pick-the-best-non-standard-port-for-ssh-or-other-services/</guid>
      <description>How to pick the best non-standard port for SSH (or other services) I won’t get in the discussion if this is a good or a bad idea. Other people have done that. I’m just going to assume you decided by yourself this is a good idea and are now wondering: “How do I pick the best port?”.
Let’s look at the threat model first. The reason to move a service to a non-standard port is to hide it from a scan.</description>
    </item>
    
    <item>
      <title>Raspberry Pi - minimal network security setup for a headless Pi</title>
      <link>https://www.ivankovic.me/blog/2013/11/09/raspberry-pi-minimal-network-security-setup-for-a-headless-pi/</link>
      <pubDate>Sat, 09 Nov 2013 17:50:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/11/09/raspberry-pi-minimal-network-security-setup-for-a-headless-pi/</guid>
      <description>Raspberry PI - Minimal network security setup for a headless PI I run a couple of purely headless Raspberry PI units connected to my network. The following is a list of minimal security precautions I use on all units. I am using Raspbian, since it is far more stable and easier to configure securely than Arch. I would recommend everyone to install Arch at least once and play around as much as possible.</description>
    </item>
    
    <item>
      <title>First post on the new blog</title>
      <link>https://www.ivankovic.me/blog/2013/11/05/first-post-on-the-new-blog/</link>
      <pubDate>Tue, 05 Nov 2013 22:17:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/11/05/first-post-on-the-new-blog/</guid>
      <description>First post on the new blog In an effort to promote decentralisation and DIY culture, I am no longer using Blogger and instead code the whole thing by hand as static content using nanoc.
I lose the dynamic content, but I make it up in post size! The total transfer size as reported by the Chrome network tools for this page is 117 bytes, compared to the 42.5 KB for the Blogspot article.</description>
    </item>
    
    <item>
      <title>Raspberry Pi - List of packages you can remove if you only do SSH</title>
      <link>https://www.ivankovic.me/blog/2013/09/21/raspberry-pi-list-of-packages-you-can-remove-if-you-only-do-ssh/</link>
      <pubDate>Sat, 21 Sep 2013 19:28:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/09/21/raspberry-pi-list-of-packages-you-can-remove-if-you-only-do-ssh/</guid>
      <description>Raspberry PI - List of packages you can remove if you only do SSH If you, like me, only access your R-PI over SSH, don’t have a printer connected to it and don’t use it to play music, you might have a few packages installed that you will never ever use.
Here’s a nice list to help you remove them:
alsa-base alsa-utils cups-bsd cups-client cups-common debian-reference-common debian-reference-en desktop-base desktop-file-utils dillo galculator gconf-service gconf2 gconf2-common gnome-icon-theme gnome-themes-standard gnome-themes-standard gpicview gsettings-desktop-schemas gtk2-engines:armhf hicolor-icon-theme idle idle idle3 leafpad leafpad libcups2:armhf libcupsimage2:armhf libgail-3-0:armhf libgail18:armhf libgconf-2-4:armhf libgnome-keyring0:armhf lightdm lxappearance lxde lxde-common lxde-core lxde-icon-theme lxinput lxmenu-data lxpanel lxpolkit lxrandr lxsession lxsession-edit lxshortcut lxshortcut lxtask lxterminal menu-xdg midori netsurf-common netsurf-gtk obconf omxplayer openbox penguinspuzzle pistore plymouth raspberrypi-artwork smartsim tk8.</description>
    </item>
    
    <item>
      <title>Monitoring the Raspberry Pi CPU Temperature</title>
      <link>https://www.ivankovic.me/blog/2013/09/15/monitoring-the-raspberry-pi-cpu-temperature/</link>
      <pubDate>Sun, 15 Sep 2013 20:37:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/09/15/monitoring-the-raspberry-pi-cpu-temperature/</guid>
      <description>Monitoring the Raspberry PI - CPU Temperature If you are like me, you have a few Raspberry PI-es in the house. They are the perfect platform for hacker enthusiasts and rightfully so. Cheap, versatile, unified platform shared by hundreds of thousands of people, what’s not to like.
While I do have a few pies for development, one of them is my “production” home server. It serves as the SSH server that bridges my home network and the internet.</description>
    </item>
    
    <item>
      <title>Nanoc and App Engine</title>
      <link>https://www.ivankovic.me/blog/2013/01/16/nanoc-and-app-engine/</link>
      <pubDate>Wed, 16 Jan 2013 20:37:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2013/01/16/nanoc-and-app-engine/</guid>
      <description>Nanoc and App Engine You can get away with a lot these days just by using static sites. Or just by using client side scripts. A lot of services out there cover the basic things a website should have. Need comments? Social networks! Need visitor metrics? Google Analytics! And static website generators are really good now. I recently decided to use nanoc to make a small website. And it is simple, fast and works really well with Vim.</description>
    </item>
    
    <item>
      <title>Can JavaScript getTime() be used for measuring performance of JavaScript code</title>
      <link>https://www.ivankovic.me/blog/2011/03/26/can-javascript-gettime-be-used-for-measuring-performance-of-javascript-code/</link>
      <pubDate>Sat, 26 Mar 2011 10:16:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2011/03/26/can-javascript-gettime-be-used-for-measuring-performance-of-javascript-code/</guid>
      <description>Can JavaScipt getTime() be used for measuring performance of JavaScript code? Recently, during research for my masters thesis I had to answer the question “Can we use JavaScirpt getTime() function in our benchmarks and get portable benchmarks that are valid?”.
For the tl;dr crowd here is a short answer: Yes on Linux (and OS X probably) - not really on Windows.
After some research on the Internet, I found this blog post from 2008.</description>
    </item>
    
    <item>
      <title>Simple fast edit distance in a dictionary</title>
      <link>https://www.ivankovic.me/blog/2010/02/09/simple-fast-edit-distance-in-a-dictionary/</link>
      <pubDate>Tue, 09 Feb 2010 14:32:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/blog/2010/02/09/simple-fast-edit-distance-in-a-dictionary/</guid>
      <description>Simple fast edit distance in a dictionary Edit distance (or Levenshtein distance) is a measure of similarity between two strings. Given two strings A and B, if you are allowed to delete any character in B, insert a new character in B (at any position) or substitute any character in B what is the minimal number of operations required to turn B into A?
The solution is simple dynamic programming.</description>
    </item>
    
    <item>
      <title>Animals</title>
      <link>https://www.ivankovic.me/photography/animals/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/photography/animals/</guid>
      <description>       </description>
    </item>
    
    <item>
      <title>Cityscapes</title>
      <link>https://www.ivankovic.me/photography/cityscapes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/photography/cityscapes/</guid>
      <description>         </description>
    </item>
    
    <item>
      <title>Food</title>
      <link>https://www.ivankovic.me/photography/food/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/photography/food/</guid>
      <description>       </description>
    </item>
    
    <item>
      <title>Landscapes</title>
      <link>https://www.ivankovic.me/photography/landscapes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.ivankovic.me/photography/landscapes/</guid>
      <description>        </description>
    </item>
    
  </channel>
</rss>